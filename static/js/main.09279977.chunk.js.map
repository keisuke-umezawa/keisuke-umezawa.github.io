{"version":3,"sources":["components/Backdrop.tsx","components/Navbar.tsx","components/SideDrawer.tsx","pages/About.tsx","shared/styles/PageTitleWrapper/index.ts","pages/Blog.tsx","pages/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Backdrop","props","clickHandler","bind","className","onClick","this","backdropClickHandler","React","Navbar","style","padding","Provider","value","color","size","Link","to","flex","drawToggleClickHandler","Component","SideDrawer","drawerClasses","show","join","About","href","styled","h1","Blog","classes","PageTitleWrapper","Grid","container","contents","map","item","key","xs","sm","md","cardGrid","Card","card","CardActionArea","url","CardContent","Typography","variant","gutterBottom","title","withStyles","theme","createStyles","maxWidth","margin","height","marginBottom","Home","App","setState","prevState","isOpen","state","backDrop","Switch","Route","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"09CAyBeA,G,wDAhBX,WAAYC,GAAgB,IAAD,8BACvB,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBAFG,E,qDAMvB,OACI,uBAAKC,UAAU,WAAWC,QAASC,KAAKJ,iB,qCAK5CI,KAAKL,MAAMM,2B,GAbIC,c,uBC2CRC,G,wDAtCX,WAAYR,GAAgB,IAAD,8BACvB,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBAFG,E,qDAMvB,OACI,0BAAQC,UAAU,SAASM,MAAO,CAAEC,QAAS,IACzC,uBAAKP,UAAU,sBACX,uBAAKA,UAAU,wBAAwBC,QAASC,KAAKJ,cACjD,gBAAC,IAAYU,SAAb,CAAsBC,MAAO,CAAEC,MAAO,QAASC,KAAM,UACjD,gBAAC,IAAD,QAGR,2BACI,gBAACC,EAAA,EAAD,CAAMC,GAAG,IAAIb,UAAU,iBAAvB,wBAEJ,uBAAKA,UAAU,SAASM,MAAO,CAAEQ,KAAM,KACvC,uBAAKd,UAAU,4BACX,0BACI,gBAACY,EAAA,EAAD,CAAMC,GAAG,UACL,oCAEJ,gBAACD,EAAA,EAAD,CAAMC,GAAG,SACL,yC,qCAUxBX,KAAKL,MAAMkB,6B,GAnCEC,cC8BNC,G,wDA9BX,WAAYpB,GAAgB,IAAD,8BACvB,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBAFG,E,qDAMvB,IAAMmB,EAAgBhB,KAAKL,MAAMsB,KAAO,CAAC,cAAe,QAAU,CAAC,eAEnE,OACI,uBAAKnB,UAAWkB,EAAcE,KAAK,MAC/B,uBAAKpB,UAAU,2BACX,qBAAGA,UAAU,sBAAb,SAEJ,0BACI,gBAACY,EAAA,EAAD,CAAMC,GAAG,UACL,sBAAIZ,QAASC,KAAKJ,cAAlB,UAEJ,gBAACc,EAAA,EAAD,CAAMC,GAAG,SACL,sBAAIZ,QAASC,KAAKJ,cAAlB,a,qCAQhBI,KAAKL,MAAMkB,6B,GA3BMC,c,gBC2DVK,G,wDA7DX,WAAYxB,GAAY,uCACdA,G,qDAIN,OACI,wBAAMG,UAAU,QACZ,sBAAIA,UAAU,qBAAd,SACA,uBAAKA,UAAU,oBACX,yBAAOA,UAAU,qBACb,6BACI,0BACI,kCACA,8CAEJ,0BACI,sCACA,yCAEJ,0BACI,uCACA,0BACI,qBAAGsB,KAAK,sCAAR,YAGR,0BACI,uCACA,0BACI,qBAAGA,KAAK,qCAAR,iBAGR,0BACI,oCACA,0BACI,qBAAGA,KAAK,0EAAR,YAGR,sBAAItB,UAAU,qBACV,0BACI,qBAAGsB,KAAK,sCACZ,gBAAC,IAAYd,SAAb,CAAsBC,MAAO,CAAEE,KAAM,MAAOD,MAAO,SAC/C,gBAAC,IAAD,SAIJ,0BACI,qBAAGY,KAAK,iCACZ,gBAAC,IAAYd,SAAb,CAAsBC,MAAO,CAAEE,KAAM,MAAOD,MAAO,YAC/C,gBAAC,IAAD,kB,GAjDhBM,c,qLCNLO,M,MAAAA,EAAOC,GAAtB,K,QC8BMC,E,uKAEe,IACLC,EAAYxB,KAAKL,MAAjB6B,QACR,OACI,6BACI,uCACA,kBAACC,EAAD,aACA,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAAC7B,UAAW0B,EAAQG,WAC9BC,EAASC,KAAI,SAACC,EAAMC,GAAP,OACV,kBAACL,EAAA,EAAD,CACII,MAAI,EACJC,IAAKA,EACLC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJpC,UAAW0B,EAAQW,UAEnB,kBAACC,EAAA,EAAD,CAAMtC,UAAW0B,EAAQa,MACrB,kBAACC,EAAA,EAAD,CAAgBlB,KAAMU,EAAKS,KACvB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAChCb,EAAKc,oB,GAtB/B9B,aAmCJ+B,eAlDO,SAACC,GAAD,OAClBC,YAAa,CACTpB,UAAW,CACPqB,SAAU,SACVC,OAAQ,YAEZd,SAAU,CACN9B,QAAS,UAEbgC,KAAM,CACFa,OAAQ,QACRC,aAAc,YAuCXN,CAA0BtB,GChD1B6B,G,wDAbX,WAAYzD,GAAY,uCACdA,G,qDAIN,OACI,wBAAMG,UAAU,QACZ,sBAAIA,UAAU,oBAAd,6C,GARGgB,cC2DJuC,E,kDA9Cb,WAAY1D,GAAY,IAAD,8BACrB,cAAMA,IAkCAkB,uBAAyB,WAC/B,EAAKyC,UAAS,SAACC,GACb,MAAO,CAAEC,QAASD,EAAUC,YArCT,EAyCfvD,qBAAuB,WAC7B,EAAKqD,SAAS,CAAEE,QAAQ,KAxCxB,EAAKC,MAAQ,CACXD,QAAQ,GAGV,EAAK3C,uBAAyB,EAAKA,uBAAuBhB,KAA5B,gBAC9B,EAAKI,qBAAuB,EAAKA,qBAAqBJ,KAA1B,gBAPP,E,qDAYrB,IAAI6D,EAMJ,OAJI1D,KAAKyD,MAAMD,SACXE,EAAW,kBAAC,EAAD,CAAUzD,qBAAsBD,KAAKC,wBAIlD,kBAAC,IAAD,KACE,yBAAKH,UAAU,OACb,kBAAC,EAAD,CAAQe,uBAAwBb,KAAKa,yBACrC,kBAAC,EAAD,CAAYI,KAAMjB,KAAKyD,MAAMD,OAAQ3C,uBAAwBb,KAAKa,yBACjE6C,EACD,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAW3C,IAChC,kBAACyC,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWvC,IAC/B,kBAACqC,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWV,IAC3B,kBAACQ,EAAA,EAAD,CAAOE,UAAWV,W,GA7BZtC,aCLEiD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.09279977.chunk.js","sourcesContent":["import * as React from \"react\";\n\nimport './Backdrop.css';\n\ninterface IProps {\n    backdropClickHandler(): void;\n}\n\nclass Backdrop extends React.Component<IProps, {}> {\n    constructor(props: IProps) {\n        super(props);\n        this.clickHandler = this.clickHandler.bind(this);\n    };\n\n    public render() {\n        return (\n            <div className=\"backdrop\" onClick={this.clickHandler} />\n        );\n    }\n\n    private clickHandler() {\n        this.props.backdropClickHandler();\n    }\n}\n\nexport default Backdrop;\n","import * as React from 'react';\nimport { Component } from 'react';\nimport { IconContext } from \"react-icons\";\nimport { MdMenu } from 'react-icons/md';\nimport { Link } from \"react-router-dom\";\n\nimport './Navbar.css';\n\ninterface IProps {\n    drawToggleClickHandler(): void,\n}\n\nclass Navbar extends Component<IProps> {\n    constructor(props: IProps) {\n        super(props);\n        this.clickHandler = this.clickHandler.bind(this);\n    }\n\n    public render() {\n        return (\n            <header className=\"navbar\" style={{ padding: 0 }}>\n                <nav className=\"navbar__navigation\">\n                    <div className=\"navbar__toggle-button\" onClick={this.clickHandler}>\n                        <IconContext.Provider value={{ color: \"white\", size: \"1.5em\" }}>\n                            <MdMenu />\n                        </IconContext.Provider>\n                    </div>\n                    <div>\n                        <Link to=\"/\" className=\"navbar__title\">umechan's portfolio</Link>\n                    </div>\n                    <div className=\"spacer\" style={{ flex: 1 }} />\n                    <div className=\"navbar__navigation-items\">\n                        <ul>\n                            <Link to=\"/about\">\n                                <li>About</li>\n                            </Link>\n                            <Link to=\"/blog\">\n                                <li>Blog</li>\n                            </Link>\n                        </ul>\n                    </div>\n                </nav>\n            </header>\n        );\n    }\n\n    private clickHandler() {\n        this.props.drawToggleClickHandler();\n    }\n}\n\nexport default Navbar;\n","import * as React from 'react';\nimport {Component} from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport './SideDrawer.css';\n\ninterface IProps {\n    show: boolean,\n    drawToggleClickHandler(): void,\n}\n\nclass SideDrawer extends Component<IProps> {\n    constructor(props: IProps) {\n        super(props);\n        this.clickHandler = this.clickHandler.bind(this);\n    }\n\n    public render() {\n        const drawerClasses = this.props.show ? ['side-drawer', 'open'] : ['side-drawer'];\n\n        return (\n            <nav className={drawerClasses.join(' ')}>\n                <div className=\"side-drawer__title-area\">\n                    <p className=\"side-drawer__title\">Menu</p>\n                </div>\n                <ul>\n                    <Link to=\"/about\">\n                        <li onClick={this.clickHandler}>About</li>\n                    </Link>\n                    <Link to=\"/blog\">\n                        <li onClick={this.clickHandler}>Blog</li>\n                    </Link>\n                </ul>\n            </nav>\n        );\n    }\n\n    private clickHandler() {\n        this.props.drawToggleClickHandler();\n    }\n}\n\nexport default SideDrawer;\n","import * as React from 'react';\nimport { Component } from 'react';\nimport { IconContext } from \"react-icons\";\nimport { FaTwitterSquare } from 'react-icons/fa';\nimport { GoMarkGithub } from 'react-icons/go';\n\nimport './About.css';\n\nclass About extends Component {\n    constructor(props: {}) {\n        super(props);\n    }\n\n    public render() {\n        return (\n            <main className=\"main\">\n                <h1 className=\"about-page__title\">About</h1>\n                <div className=\"about-page__card\">\n                    <table className=\"about-page__table\">\n                        <tbody>\n                            <tr>\n                                <th>Name</th>\n                                <td>Keisuke Umezawa</td>\n                            </tr>\n                            <tr>\n                                <th>Birthday</th>\n                                <td>1989/07/10</td>\n                            </tr>\n                            <tr>\n                                <th>Blog (en)</th>\n                                <td>\n                                    <a href=\"https://medium.com/@keisukeumezawa\">Medium</a>\n                                </td>\n                            </tr>\n                            <tr>\n                                <th>Blog (ja)</th>\n                                <td>\n                                    <a href=\"https://kumechann.hatenablog.com/\">Hatena Blog</a>\n                                </td>\n                            </tr>\n                            <tr>\n                                <th>Resume</th>\n                                <td>\n                                    <a href=\"https://github.com/keisuke-umezawa/pandoc_resume/blob/master/resume.md\">Pandoc</a>\n                                </td>\n                            </tr>\n                            <tr className=\"about-page__icons\">\n                                <td>\n                                    <a href=\"https://github.com/keisuke-umezawa\">\n                                <IconContext.Provider value={{ size: \"3em\", color: \"#000\" }}>\n                                    <GoMarkGithub />\n                                </IconContext.Provider>\n                                    </a>\n                                </td>\n                                <td>\n                                    <a href=\"https://twitter.com/kumezawa_\">\n                                <IconContext.Provider value={{ size: \"3em\", color: \"#55acee\" }}>\n                                    <FaTwitterSquare />\n                                </IconContext.Provider>\n                                    </a>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </main>\n        );\n    }\n}\n\nexport default About; \n","import styled from \"styled-components\";\n\nexport default styled.h1`\n    font-size: 3.5rem;\n    margin-top: 10vh;\n`;\n","import React, { Component } from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    withStyles,\n    Theme,\n    WithStyles,\n    createStyles\n} from \"@material-ui/core/styles\";\n\nimport PageTitleWrapper from \"../shared/styles/PageTitleWrapper\";\nimport contents from \"./BlogContents.json\";\n\nconst styleSettings = (theme: Theme) =>\n    createStyles({\n        container: {\n            maxWidth: \"1200px\",\n            margin: \"5vh auto\"\n        },\n        cardGrid: {\n            padding: \"0 16px\"\n        },\n        card: {\n            height: \"150px\",\n            marginBottom: \"30px\"\n        }\n    });\n\nclass Blog extends Component<WithStyles<typeof styleSettings>, {}> {\n\n    public render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <title>Blog</title>\n                <PageTitleWrapper>Blog</PageTitleWrapper>\n                <Grid container className={classes.container}>\n                    {contents.map((item, key) => (\n                        <Grid\n                            item\n                            key={key}\n                            xs={12}\n                            sm={6}\n                            md={4}\n                            className={classes.cardGrid}\n                        >\n                            <Card className={classes.card}>\n                                <CardActionArea href={item.url}>\n                                    <CardContent>\n                                        <Typography variant=\"h6\" gutterBottom>\n                                            {item.title}\n                                        </Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styleSettings)(Blog);\n","import * as React from 'react';\nimport { Component } from 'react';\n\nimport './Home.css';\n\nclass Home extends Component<{}> {\n    constructor(props: {}) {\n        super(props);\n    }\n\n    public render() {\n        return (\n            <main className=\"main\">\n                <h1 className=\"home-page__title\">Welcome to umechan's portfolio site!</h1>\n            </main>\n        );\n    }\n}\n\nexport default Home; \n","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\n\nimport Backdrop from './components/Backdrop';\nimport Navbar from './components/Navbar';\nimport SideDrawer from './components/SideDrawer';\nimport About from './pages/About'\nimport Blog from './pages/Blog'\nimport Home from './pages/Home'\n\n\ninterface ISideDrawerState {\n  isOpen: boolean;\n}\n\nclass App extends Component<{}, ISideDrawerState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n  \n    this.drawToggleClickHandler = this.drawToggleClickHandler.bind(this);\n    this.backdropClickHandler = this.backdropClickHandler.bind(this);\n  \n  }\n\n  public render() {\n    let backDrop;\n\n    if (this.state.isOpen) {\n        backDrop = <Backdrop backdropClickHandler={this.backdropClickHandler} />;\n    }\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar drawToggleClickHandler={this.drawToggleClickHandler} />\n          <SideDrawer show={this.state.isOpen} drawToggleClickHandler={this.drawToggleClickHandler} />\n          {backDrop}\n          <Switch>\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/blog\" component={Blog} />\n            <Route path=\"/\" component={Home} />\n            <Route component={Home} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n\n  private drawToggleClickHandler = () => {\n    this.setState((prevState) => {\n      return { isOpen: !prevState.isOpen };\n    });\n  }\n  \n  private backdropClickHandler = () => {\n    this.setState({ isOpen: false });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}